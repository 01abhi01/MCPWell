[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-well-server"
version = "0.1.0"
description = "MCP server for multi-portal self-service integrations with LangGraph and Gemini LLM"
authors = [
    {name = "MCP Well Team", email = "support@mcpwell.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "langgraph>=0.1.0",
    "langchain>=0.1.0",
    "google-generativeai>=0.3.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "asyncio>=3.4.3",
    "aiohttp>=3.8.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "uvloop>=0.17.0",
    "tenacity>=8.2.0",
    "jsonschema>=4.17.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
mcp-well-server = "mcp_well_server.main:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["mcp_well_server*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
